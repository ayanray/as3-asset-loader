/**	Copyright (c) 2007-2008 Ayan Ray | http://www.ayanray.com**	Permission is hereby granted, free of charge, to any person obtaining a copy*	of this software and associated documentation files (the "Software"), to deal*	in the Software without restriction, including without limitation the rights*	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell*	copies of the Software, and to permit persons to whom the Software is*	furnished to do so, subject to the following conditions:**	The above copyright notice and this permission notice shall be included in*	all copies or substantial portions of the Software.**	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR*	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,*	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE*	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER*	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,*	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN*	THE SOFTWARE.**/package com.ayanray.loaders.handlers{	import flash.net.URLLoader;	import flash.net.URLRequest;	import flash.events.IOErrorEvent;	import flash.events.Event;		import com.ayanray.loaders.handlers.ILoader;	import com.ayanray.loaders.AssetLoaderSettings;		public class XmlLoader extends TextLoader// TODO: Create Interface Class and Rewrite the documentation at the top.. and USE ASDOC	{				private var url:String = "";				function XmlLoader( url:String, settings:Object ):void 		{			this.url = url;			super( url, settings );		}				public override function parseData( loader:URLLoader ):void 		{			var externalXML:XML;			var error:Boolean = false;						try			{				externalXML = new XML(loader.data);			}			catch (e:Error)			{				error = true;				if(AssetLoaderSettings.DEBUG > 0) throw new Error("ASSETLOADER: XML DOM Error Detected in URL: " + url +"\n" + e );				if(settings.onError != undefined)					settings.onError( {error:error, e:error, asset: externalXML, extra: this.extra} ); // asset is still available							}						if (!error)			{				if(settings.onComplete != undefined)					settings.onComplete( {asset: externalXML, extra: this.extra} );			}		}			}}