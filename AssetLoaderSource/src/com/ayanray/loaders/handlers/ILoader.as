/**	Copyright (c) 2007-2008 Ayan Ray | http://www.ayanray.com**	Permission is hereby granted, free of charge, to any person obtaining a copy*	of this software and associated documentation files (the "Software"), to deal*	in the Software without restriction, including without limitation the rights*	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell*	copies of the Software, and to permit persons to whom the Software is*	furnished to do so, subject to the following conditions:**	The above copyright notice and this permission notice shall be included in*	all copies or substantial portions of the Software.**	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR*	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,*	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE*	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER*	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,*	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN*	THE SOFTWARE.**/package com.ayanray.loaders.handlers{	import flash.events.*;	/**	* All handlers must implement this class in order to be used by the AssetLoader Class	*/	public interface ILoader 	{		/**		* Called when the asset has started loading		*/		function onStart 		( e:Event )	:void;		/**		* Called when the asset has finished downloading		*/		function onComplete		( e:Event ) :void;		/**		* Called when a progress event is received. Same as tracking the asset's download progress		*/		function onUpdate		( e:ProgressEvent ) :void;		/**		* Called whenever an error occurs that prevents from downloading the entire file		*/		function onError		( e:* ) :void;				/**		* Called when the DNS does not resolve in a specified amount of time		*/		function onTimeout		()  :void;		/**		* Stops Loading Process and Clears Loader Variables and Listeners		*/		function stop	 		() :void;		/**		* Clears Loader Variables and Listeners		*/		function clear			() :void;	}}